<!DOCTYPE html>
<html>
    <head>
        <title>Log.d Replay Visitor <%= id %></title>
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/normalize.css@8.0.1/normalize.css">
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    </head>
    <body>
        <h1 style="position: absolute; bottom: 0px;">This is a Replay of Visitor #<%= id %> (<span id="timer">0</span>/<%= timeOnPage %> ms)</h1>
        <div id="mouse" style="background-color: black; transition-property: top, left; transition-duration: 0.1s; position: absolute; top: 0px; left: 0px; opacity: 0.75; height: 20px; width: 20px; border-radius: 50%;"></div>
        <div style="opacity: 0.5; user-select: none;" class="container">
            <header class="row">
                <h1>About Project Log.d</h1>
            </header>
            <section class="row">
                <nav class="col col-4">
                    <ul class="list-unstyled">
                        <li><a href="/" class="btn btn-secondary w-75">About Project Log.d</a></li>
                        <li><a href="/logd/download/logd.zip" target="_blank" class="btn btn-success w-75">Download</a></li>
                        <li><h3>Documentation</h3></li>
                        <li><a href="/docs/project-architecture" class="btn btn-primary w-75">Project Architecture</a></li>
                        <li><a href="/docs/data-transfer-mechanism" class="btn btn-primary w-75">Data Transfer Mechanism</a></li>
                        <li><a href="/docs/schema" class="btn btn-primary w-75">Schema</a></li>
                        <li><a href="/docs/notes-on-schema" class="btn btn-primary w-75">Notes on Schema</a></li>
                        <li><a href="/docs/api" class="btn btn-primary w-75">API</a></li>
                        <li><a href="https://github.com/Frostzeichen/project-log-d" class="btn btn-primary w-75">GitHub Repository</a></li>
                        <li><a href="http://localhost:3001" class="btn btn-dark w-75">Project Dashboard Server</a></li>
                    </ul>
                </nav>
                <main class="col">
                    <h2>What is Log.d?</h2>
                    <p>Log.d is a highly-configurable, general-purpose key-logging library designed to gather mouse and keyboard inputs from a large number of users. It is planned to work seamlessly within a microservice architecture, ensuring compatibility with servers written in any language by working with the REST API.</p>
                    <p>The library has two main parts:</p>
                    <ol>
                        <li>A frontend-facing keyboard and mouse tracker; and</li>
                        <li>A backend helper receiver</li>
                    </ol>
                    <p>The receiver works similarly to Ruby helper methods. While it is possible to parse information from the tracker without the helper, the helper makes it so you won't need to write and rewrite functions to avoid repetitive code.</p>
                    <h2>History of Log.d</h2>
                    <p>Log.d started out as Terenz's capstone project for <a href="https://village88.com/">Village 88</a>.</p>
                    <p>The idea came from Michael Choi, and the original prompt looked a bit like this:</p>
                    <p>Build a javascript library that others can use or chrome extension, which records all the keyboard strokes as well as mouse movements from the users. On your project dashboard, show video replay of what users did on the website (for those that had this javascript library). You can also show all the websites that are using your javascript library and show the current number of active users on each of the site. Use D3js and other charts to make your project dashboard look super impressive (where it shows where the user put their mouse, where they clicked, etc). You could also have something where it displays the heatmap of where people clicked, dwelled, etc.</p>
                </main>
            </section>
        </div>
        <script>
            const timeOnPage = "<%= timeOnPage %>";
            const data = <%- data %>;
            let timerValue = 0;
            let timerViewer = setInterval(() => {
                timerValue += 11;
                document.querySelector("#timer").textContent = timerValue;
                if (data[timerValue]) {
                    document.querySelector("#mouse").style.top = `${data[timerValue].y_position}px`
                    document.querySelector("#mouse").style.left = `${data[timerValue].x_position}px`
                } else {
                    document.querySelector("#mouse").style.top = `${data[timeOnPage].y_position}px`
                    document.querySelector("#mouse").style.left = `${data[timeOnPage].x_position}px`
                }
                if (timerValue >= timeOnPage) {
                    document.querySelector("#timer").textContent = timeOnPage;
                    clearInterval(timerViewer);
                }
            }, 11);
        </script>
    </body>
</html>